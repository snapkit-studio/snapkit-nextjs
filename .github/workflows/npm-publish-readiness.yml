name: NPM Publish Readiness Check

on:
  pull_request:
    branches: [main]
    paths:
      - 'packages/**'
      - 'scripts/**'
      - 'pnpm-lock.yaml'
      - '.github/workflows/npm-publish-readiness.yml'

jobs:
  publish-readiness-check:
    name: Publish Readiness Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm exec turbo build

      - name: Prepare publication packages
        run: node scripts/prepare-publication.js

      - name: Test publication builds
        run: node scripts/test-publication.js

      - name: Verify package exports
        run: |
          echo "Testing package exports..."
          node -e "
          const core = require('./packages/core/dist/index.js');
          const react = require('./packages/react/dist/index.js');
          const nextjs = require('./packages/nextjs/dist/index.js');
          
          if (!core.SnapkitUrlBuilder || !react.SnapkitProvider || !nextjs.snapkitLoader) {
            process.exit(1);
          }
          console.log('✅ All packages export required functions');
          "

      - name: Check for workspace dependencies
        run: |
          echo "Checking for workspace dependencies..."
          for pkg in core react nextjs; do
            if grep -q "workspace:" packages/$pkg/package.publish.json; then
              echo "❌ Found workspace dependency in $pkg"
              exit 1
            fi
          done
          echo "✅ No workspace dependencies found"

  installation-test:
    name: Installation Test
    runs-on: ubuntu-latest
    needs: publish-readiness-check

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Build packages
        run: |
          pnpm install --frozen-lockfile
          pnpm build
          node scripts/prepare-publication.js

      - name: Test installation
        run: |
          # Create test directory
          TEST_DIR=$(mktemp -d)
          cd $TEST_DIR
          
          # Initialize and install packages
          npm init -y
          npm install file:${GITHUB_WORKSPACE}/packages/core file:${GITHUB_WORKSPACE}/packages/react file:${GITHUB_WORKSPACE}/packages/nextjs
          
          # Test imports
          node -e "
          const core = require('@snapkit-studio/core');
          const react = require('@snapkit-studio/react');
          const nextjs = require('@snapkit-studio/nextjs');
          
          if (!core.SnapkitUrlBuilder || !react.SnapkitProvider || !nextjs.snapkitLoader) {
            throw new Error('Import test failed');
          }
          console.log('✅ Installation and imports successful');
          "

      - name: NPM publish dry run
        run: |
          for pkg in core react nextjs; do
            cd packages/$pkg
            cp package.json package.json.backup
            cp package.publish.json package.json
            npm publish --dry-run --access public
            mv package.json.backup package.json
            cd ../..
          done
          echo "✅ Dry run completed successfully"